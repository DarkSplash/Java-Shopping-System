/**
 *
 * @author Dave
 */

import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
public class CNIT255Final extends javax.swing.JFrame {





    private static CustomerAccount currentCustomer = new CustomerAccount("David", "Tang", "4/14/19", (new Address("1342 Manicott Dr", "New Yourk", "New York", "USA", "23232")), (new ContactInfo("david@gmail.com", "4315581459")), (new LoginCredentials()), "22", "22");
    private static AdminAccount adminProfile;

    private static ArrayList< ItemStock > itemStockList = new ArrayList<>();         //Holds the list of items we offer
    private static ArrayList<Supplier> supplierList = new ArrayList<>();        //Holds the list of suppliers
    private static ArrayList<Category> categoryList = new ArrayList<>();        //Holds the list of categories
    private static ArrayList< Item > cartList = new ArrayList< Item >();        //Holds the list of items in the customer's cart

    private static DefaultListModel cartModel = new DefaultListModel();

    private static double cartTotal = 0.0;
    //private static

    /**
     * Creates new form CNIT255Final
     */
    public CNIT255Final() {
        initComponents();


        //Lists all of our products in the jList.  jList's variable is called ProductList
        DefaultListModel productModel = new DefaultListModel();
        for (int i=0; i<itemStockList.size(); i++) {
            productModel.addElement(itemStockList.get(i).getName());
        }
        ProductList.setModel(productModel);
        
        refreshLists();
        
        
        /*DefaultListModel supplierModel = new DefaultListModel();
        for (int i=0; i<supplierList.size(); i++) {
            supplierModel.addElement(supplierList.get(i).getCompanyName());
        }
        jListSupplier.setModel(supplierModel);
        
        DefaultListModel categoryModel = new DefaultListModel();
        for (int i=0; i<categoryList.size(); i++) {
            categoryModel.addElement(categoryList.get(i).getCategoryName());
            System.out.println(categoryList.get(i).getCategoryName());
        }
        jListCategory.setModel(categoryModel);*/
        
        
        
        // Initialize cart JList
        cartJList.setModel( cartModel );

        //Creating the admin profile, needs to be in a try catch since it throws NoSuchAlgorithmException
        try
        {
            adminProfile = new AdminAccount("Joe", "Smith", "7/22/16", (new Address("8173 S. Rockland Ave.", "Downers Grove", "Illinois", "USA", "60515")), (new ContactInfo("joesmith@business.com", "6302564410")), (new LoginCredentials("admin", "1234qazw")), "A0001", "3/5/13");
        }
        catch (NoSuchAlgorithmException e)
        {
            System.out.println("Something went wrong, see: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ProductList = new javax.swing.JList<>();
        addToCart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cartTotalText = new javax.swing.JTextField();
        purchaseCartButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cartJList = new javax.swing.JList<>();
        clearCartButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productQuantityList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemAdminPanel = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProductList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ProductList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProductList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProductList);

        addToCart.setText("Add to Cart");
        addToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartActionPerformed(evt);
            }
        });

        jLabel1.setText("Your Cart");

        jLabel2.setText("Total:");

        cartTotalText.setEditable(false);
        cartTotalText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cartTotalText.setText("$0.00");

        purchaseCartButton.setText("Purchase Cart");
        purchaseCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseCartButtonActionPerformed(evt);
            }
        });

        cartJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(cartJList);

        clearCartButton.setText("Clear Cart");
        clearCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCartButtonActionPerformed(evt);
            }
        });

        productQuantityList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(productQuantityList);

        jLabel3.setText("Products:");

        jLabel4.setText("Qnt:");

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItemAdminPanel.setText("Admin Panel");
        jMenuItemAdminPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAdminPanelActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAdminPanel);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(addToCart)
                        .addGap(30, 30, 30)
                        .addComponent(clearCartButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(purchaseCartButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cartTotalText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cartTotalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToCart)
                    .addComponent(purchaseCartButton)
                    .addComponent(clearCartButton))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartActionPerformed
        //Adds the currently selected jList item into the 'currentCustomer's shopping cart

        String target = ProductList.getSelectedValue();

        for( int i = 0; i < itemStockList.size(); i++ )
        {
            ItemStock test = itemStockList.get( i );
            String checkName = test.getName();

            if( checkName.equals( target ))
            {
                //Checks to see if there is enough stock
                if(test.getStock() < 1) {
                    JOptionPane.showMessageDialog(this, "Item is out of stock!", "Item Out of Stock", JOptionPane.ERROR_MESSAGE);
                    break;
                }

                System.out.println("Found " + target);

                //                (No longer Relivent, using cartList ArrayList)

//                 currentCustomer.getShoppingcart().addItemToCart( (new ItemOrder(test.getIndex(), test.getName(), test.getPrice(), test.getTheSupplier(),
//                                                                    test.getExpirationDate(), test.getItemDescription(), test.getMyCategory(),
//                                                                    5)) );      //5 is the placeholder for ordernumber.

                //System.out.println("Added: " + currentCustomer.getShoppingcart().getCart().get(0).getName());
                /*
                System.out.println("Items in Cart:");
                for(ItemOrder a : currentCustomer.getShoppingcart().getCart()) {
                    System.out.println(a.getName());
                }*/

                // Change the cart list to reflect current cart changes
                cartModel.addElement( test.getName() );
                cartList.add( new Item(test.getIndex(), test.getName(), test.getPrice(), test.getTheSupplier(), //????~~
                        test.getExpirationDate(), test.getItemDescription(), test.getMyCategory() ));

                //Decreasing Stock
                itemStockList.get(i).setStock( (itemStockList.get(i).getStock() - 1) );


                // Calculate new total cart price
                String cartPrice = cartTotalText.getText().substring( 1 );
                double newCartPrice = test.getPrice() + Double.parseDouble( cartPrice );
                cartTotalText.setText( "$" + Double.toString( newCartPrice ) );

                cartTotal = newCartPrice;

                refreshLists();

                return;
            }
        }


    }//GEN-LAST:event_addToCartActionPerformed


    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);             //Exits the window
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ProductListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductListMouseClicked

    }//GEN-LAST:event_ProductListMouseClicked

    private void purchaseCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseCartButtonActionPerformed
        JDialog.setDefaultLookAndFeelDecorated( true );
        int response = JOptionPane.showConfirmDialog( null, "Would you like to purchase the cart? Total is $" + cartTotal, "Purchase confirmation",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE );

        if( response == JOptionPane.YES_OPTION )
        {
          System.out.println("Yes button clicked");
          System.out.println("Cart size: " + cartList.size());


            int cartSize = cartList.size();
            for( int i = cartSize - 1; i >= 0; i-- )
            {
                System.out.println("cartList.size(): " + cartList.size());
                System.out.println("Loop #: " + i);

                //removing 1 from the stock
                //int currentStock = itemStockList.get( (cartList.get(i).getIndex()) ).getStock();
                //itemStockList.get( (cartList.get(i).getIndex()) ).setStock(currentStock - 1);

                cartList.remove(i);
            }
            //cartList = null;
            refreshLists();

            cartModel.removeAllElements();
            cartTotalText.setText( "$0.0" );
            cartTotal = 0;

            System.out.println("Cart Size at end: " + cartList.size());
        }
    }//GEN-LAST:event_purchaseCartButtonActionPerformed

    private void clearCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCartButtonActionPerformed
        cartModel.removeAllElements();
        cartTotalText.setText( "$0.0" );
        cartTotal = 0;

        for( int i = cartList.size() - 1; i >= 0; i-- )
        {

            //Adding items back into inventory
            int currentStock = itemStockList.get( (cartList.get(i).getIndex()) ).getStock();
            itemStockList.get( (cartList.get(i).getIndex()) ).setStock(currentStock + 1);

            //removing item from cart
            cartList.remove( i );

            System.out.println("Cart size: " + cartList.size());
            refreshLists();
        }
    }//GEN-LAST:event_clearCartButtonActionPerformed

    private void jMenuItemAdminPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAdminPanelActionPerformed
        //jDialogAdminPanel.setVisible(true);
    }//GEN-LAST:event_jMenuItemAdminPanelActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        System.out.println("hi guys...");




        //Initalizing Categories
        categoryList.add(new Category("Electronics", "All things electronics"));
        categoryList.add(new Category("Food", "Items which can be consumed"));
        categoryList.add(new Category("Games", "The hottest games for all platforms"));
        //Initalizing Suppliers
        supplierList.add(new Supplier("FastFit", "Ben Wagrez", (new SupplierContactInfo("fastfit@fastfit.org", "4042728293",
        "12233312", "benwagrez@fastfit.org", "7048217332", "www.fastfit.org")) ));
        supplierList.add(new Supplier("BongoCo", "Bongo Man", (new SupplierContactInfo("bongo@bongoco.com", "8085038020", "58726184", "bongoman@bongoco.com", "9498187115", "www.bongoco.com"))));


        //Initalize some Items
        itemStockList.add(new ItemStock(0,"Raspberry Pi", 35.00, supplierList.get(0), "N/A", "A tiny computer", categoryList.get(0) ,15));
        itemStockList.add(new ItemStock(5,"David's Sanityyyyy", 3301.00, supplierList.get(0), "4/16/19", "The quickly fading entity of David's Sanity", categoryList.get(1), 1));
        itemStockList.add(new ItemStock(10, "Tom Clancy's Rainbow Six: Siege", 19.99, supplierList.get(1), "N/A", "", categoryList.get(2), 500));
        itemStockList.add(new ItemStock(11, "Sid Meier’s Civilization VI", 59.99, supplierList.get(1), "N/A", "", categoryList.get(2), 700));
        itemStockList.add(new ItemStock(12, "Rocket League", 19.99, supplierList.get(1), "N/A", "", categoryList.get(2), 400));
        itemStockList.add(new ItemStock(13, "Far Cry 5", 59.99, supplierList.get(1), "N/A", "", categoryList.get(2), 700));
        itemStockList.add(new ItemStock(14, "Grand Theft Auto V", 29.99, supplierList.get(1), "N/A", "", categoryList.get(2), 200));
        itemStockList.add(new ItemStock(15, "Warframe", 0.00, supplierList.get(1), "N/A", "", categoryList.get(2), 1000));
        itemStockList.add(new ItemStock(16, "Kingdon Come: Deliverance", 39.99, supplierList.get(1), "N/A", "", categoryList.get(2), 1500));
        itemStockList.add(new ItemStock(17, "Counter-Strike: Global Offensive", 14.99, supplierList.get(1), "N/A", "", categoryList.get(2), 600));
        itemStockList.add(new ItemStock(18, "Jurassic World: Evolution", 44.99, supplierList.get(1), "N/A", "", categoryList.get(2), 800));
        itemStockList.add(new ItemStock(19, "PlayerUnknown’s Battlegrounds", 29.99, supplierList.get(1), "N/A", "", categoryList.get(2), 700));

        

        //int index, String name, double price, Supplier theSupplier,
            //String expirationDate, String itemDescription, Category myCategory
        //itemStockList.add(e)









        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CNIT255Final().setVisible(true);
            }
        });
    }

    public void refreshLists() {

        DefaultListModel productModel = new DefaultListModel();
        DefaultListModel productQuantModel = new DefaultListModel();
        for (int i=0; i<itemStockList.size(); i++) {
            productModel.addElement(itemStockList.get(i).getName());
            productQuantModel.addElement(itemStockList.get(i).getStock());
        }
        ProductList.setModel(productModel);
        productQuantityList.setModel(productQuantModel);

        // Initialize cart JList
        cartJList.setModel( cartModel );

    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ProductList;
    private javax.swing.JButton addToCart;
    private javax.swing.JList<String> cartJList;
    private javax.swing.JTextField cartTotalText;
    private javax.swing.JButton clearCartButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAdminPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> productQuantityList;
    private javax.swing.JButton purchaseCartButton;
    // End of variables declaration//GEN-END:variables
}
